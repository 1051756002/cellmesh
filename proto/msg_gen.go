// Generated by github.com/davyxu/protoplus
// DO NOT EDIT!
package meshproto

import (
	"github.com/davyxu/protoplus/proto"
	"unsafe"
	"reflect"
	"github.com/davyxu/cellnet"
	"github.com/davyxu/cellnet/codec"
)

var (
	_ *proto.Buffer
	_ unsafe.Pointer
	_ cellnet.MessageMeta
	_ codec.CodecRecycler
	_ reflect.Kind
)

type ServiceIdentifyACK struct {
	SvcID   string
	SvcName string
}

func (self *ServiceIdentifyACK) String() string { return proto.CompactTextString(self) }

func (self *ServiceIdentifyACK) Size() (ret int) {

	ret += proto.SizeString(1, self.SvcID)

	ret += proto.SizeString(2, self.SvcName)

	return
}

func (self *ServiceIdentifyACK) Marshal(buffer *proto.Buffer) error {

	proto.MarshalString(buffer, 1, self.SvcID)

	proto.MarshalString(buffer, 2, self.SvcName)

	return nil
}

func (self *ServiceIdentifyACK) Unmarshal(buffer *proto.Buffer, fieldIndex uint64, wt proto.WireType) error {
	switch fieldIndex {
	case 1:
		return proto.UnmarshalString(buffer, wt, &self.SvcID)
	case 2:
		return proto.UnmarshalString(buffer, wt, &self.SvcName)

	}

	return proto.ErrUnknownField
}

func init() {

	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*ServiceIdentifyACK)(nil)).Elem(),
		ID:    28765,
	})

}
